commonconfig-env="PROFITELO_ENV"

akka {
  http.server.idle-timeout = 1 hour
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]
  logger-startup-timeout = 10s
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = off
  jvm-exit-on-fatal-error = on

  timer {
    interval = 10000 // 10 seconds
    registration {
      howOftenFire = 86400000 // 24 h
      delete = 86400000 // 24 h
    }
    token {
      howOftenFire = 60000    // 1 minute
      msisdnDelete = 900000   // 15 minutes
      emailDelete  = 86400000 // 24 h
    }
  }

  contexts {
    db-operations {
      fork-join-executor {
        parallelism-factor = 10.0
      }
    }
  }

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "com.contactisgroup.files.communication.message.RemoteMessage" = "kryo"
      "com.contactisgroup.files.file.model.FileId"                   = "kryo"
      "java.io.Serializable"                                         = "none"
    }

    kryo {
      idstrategy = "default"
      type       = "graph"
    }
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "backend"
      port = 0
    }
  }

 cluster {
    seed-nodes = [
      "akka.tcp://RestProfitelo@127.0.0.1:2551"]

    auto-down-unreachable-after = 100s

    metrics.enabled = off
  }

  http {
    server {
      parsing.max-content-length = 100000000
      remote-address-header = on
    }
  }
}

files {
  remote-actor = "akka.tcp://FileServer@files:2552/user/TokenManagerActor"
  scheduler {
    initial-delay = 120000 // 2 minute
    interval = 10800000 // 3 hours
  }
}

session {

  redis {
    host = "redis"
  }

  scheduler {
    initial-delay = 120000 // 2 minute
    interval = 1800000 // 30 minutes
  }
}

contexts {
  # configure a dedicated dispatcher for database calls
  db-operations {
    fork-join-executor {
      parallelism-factor = 10.0
    }
  }
}

call.details {
  minSignificantCallDuration = 30 // 30 seconds
  freeSeconds = 60 // 60 seconds
}

solr.server {
  url = "http://solr:8983/solr"
}

ratel {
  secret: "secret"
  organizationId: "4648a5f1-2931-4c2e-aac3-7c60baa77fbf"

  briefcase: {
    user: "profitelo"
    password: "528202ca08d6da1a4d526e83960589ee"
  }
}

services {
  email {
    sender {
      address: "no-reply@profitelo.pl"
      name: "Profitelo"
    }

    smtp {
      host: "smtp.gmail.com"
      port: 587
      username: "bot@contactis.pl"
      username: ${?SMTP_USERNAME}
      password: "Dadu5298"
      password: ${?SMTP_PASSWORD}
      tls: true
    }
  }

  sms {
    serwer-sms {
      username: "webapi_ratel"
      password: "NdEhurgpkDxKnAwq"
    }

    ratel {
      endpoint: "http://profitelo.wheelhouse.ratel.io/api/resources/sms/ef768a02-b79c-455e-9826-6cdef9ac4d97"
    }
  }

  token {
    msisdn-length: 4
    msisdnTokenLifetime: 10 minutes
    minTokenCreationInterval: 30 seconds
    activeTokensLimit: 10
  }

  payu {
    sandbox: false
    client_id: "145227"
    client_secret: "12f071174cb7eb79d4aac5bc2f07563f"
    signature: "45ee5dc2b3ed9cc96c730e4ac3ca406d"
    pos_auth_key: "gZnTpiq"
  }

  braintree {
    environment: "sandbox"
    merchantId: "qfrnrcr28522938s"
    publicKey: "9s93hjwrz5zws4sr"
    privateKey: "b13e4cc51fdac332dc87ca8fbc6fc646"
  }

  paypal {
    environment: "sandbox"
    clientId: "ARU8QOIuyKuT98aQLylIc8Pf25kp430ZZxAGVDOXZvBIKaS6oiGcp7SM52bx-SepsUrO8umNt7Obw6u4"
    clientSecret: "EMeX7AS8lvt1uAMl769PLzLZWJ0G6ez0gWyjV2zN5m10T8UamiBR25bInrGgqnsRUeof0kKyLfl8FWlT"
  }

}

ws {
  widget {
    max-connections: 2
  }
}

database {

  default {
    driver = "common.data.PostgresDriver$"
    db {
      connectionTimeout = 10000
      url = "jdbc:postgresql://postgres/profitelo"
      driver = org.postgresql.Driver
      user = "profitelo"
      password = "profitelo"
      numThreads = 10
      queueSize = 10000 // default is 1000
    }
  }

  test {
    driver = "common.data.PostgresDriver$"
    db {
      connectionTimeout = 10000
      url = "jdbc:postgresql://postgres/profitelo_test"
      driver = org.postgresql.Driver
      user = "profitelo"
      password = "profitelo"
      numThreads = 10
    }
  }
}

urls {
  external-host: "http://api.dev.profitelo.pl"
  external-host: ${?EXTERNAL_HOST}
}

integration-test {

  urls {
    external-host: "http://backend"
    external-host: ${?EXTERNAL_HOST}
  }

  services {
    email {
      smtp {
        host: "hoodiecrow"
        port: 3025
        username: "testuser"
        password: "testpass"
        tls: false
      }
    }

    sms {
      test-mode: true
    }

    payu {
      sandbox: false
      client_id: "145227"
      client_secret: "12f071174cb7eb79d4aac5bc2f07563f"
      signature: "45ee5dc2b3ed9cc96c730e4ac3ca406d"
      pos_auth_key: "gZnTpiq"
    }

    braintree {
      environment: "sandbox"
      merchantId: "qfrnrcr28522938s"
      publicKey: "9s93hjwrz5zws4sr"
      privateKey: "b13e4cc51fdac332dc87ca8fbc6fc646"
    }

    paypal {
      environment: "sandbox"
      clientId: "ARU8QOIuyKuT98aQLylIc8Pf25kp430ZZxAGVDOXZvBIKaS6oiGcp7SM52bx-SepsUrO8umNt7Obw6u4"
      clientSecret: "EMeX7AS8lvt1uAMl769PLzLZWJ0G6ez0gWyjV2zN5m10T8UamiBR25bInrGgqnsRUeof0kKyLfl8FWlT"
    }

    call.details {
      minSignificantCallDuration = 10 // 10 seconds
      freeSeconds = 20 // 20 seconds
    }
  }
}
